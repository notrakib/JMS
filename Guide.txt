--Initial Commands--
python3 -m venv djangoenv  

pip install django_rest_framework

venv\Scripts\activate 
OR
source ../../../venv/bin/activate

django-admin startproject project

python manage.py startapp app
OR
python3 manage.py startapp practiceapp

python3 manage.py runserver

python3 manage.py makemigrations
python3 manage.py migrate

python3 manage.py flush
python3 manage.py migrate --run-syncdb

python3 manage.py createsuperuser

--Theory--
Django is ORM based
Obeject Reletaional Mapping

Middleware is session management for Django

--Imports--
--urls.py
from xml.etree.ElementInclude import include
from django.contrib import admin
from django.urls import path, include

path('', include('practiceapp.urls')),

from . import views 
from django.urls import path

--views.py
from django.shortcuts import redirect, render
from .models import *

--admin.py
from .models import *

admin.site.register(User)

--Models--
class User(models.Model):
    Username = models.CharField(max_length=40)
    Email = models.EmailField(max_length=40)
    Photo = models.ImageField(upload_to='img/', null=True)
def _str_(self) -> str:
    return self.Username

--Views--
name = request.POST['username']
pics = request.FILES['images']
User.objects.create(Username=name, Email=email)
users = User.objects.all()
user = User.objects.get(id=pk)
user.save()
user.delete()

--HTML--
{% load static %}
<link href="{% static 'register.css' %}" rel="stylesheet" type="text/css">

<form type="submit" method="post" action="{% url 'update' pk=data.id %}">
{% csrf_token %}

for photo -> enctype="multipart/form-data"

value="{{data.Username}}"

{% if data %}
{% for i in data %}
{% endfor %}
{% endif %}


# print(students.user.first_name)
        # students.user.first_name = 'wef'

        # students.user.save()
# print(serializer.data[0]['user']['id'])